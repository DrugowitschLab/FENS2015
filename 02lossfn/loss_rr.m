function loss_rr(t, sig2)
%% plots the expected reward rate over time
%
% The function assumes momentary evidence dx generated by 
% p(dx | z dt, sig2 dt)
% with z=1. Decisions are based on the posterior over z=1 that considers
% both z=1 and z=-1.
%
% The function runs 10^5 simulations in parallel, and shows median and
% the 2.5 and 97.5 percentiles of the posterior across simulations.
% Furthermore, it shows the expected reward rate over time, assuming no
% accumulation cost, and different inter-trial intervals 0, 2, and 4.
%
% t determines the accumulation time, and sig2 the task difficulty
% (small/large sig2 = easy/hard task). If not given, t defaults to 6 and
% sig2 to 1^2.

%% settings
% time discretisation
dt = 0.01;
% observation time
if nargin < 1, t = 6; end
% task difficulty (small/large sig2 = easy/hard task)
if nargin < 2, sig2 = 1^2; end
% number of parallel simulations
sim_num = 10^5;
% cost
c = 0;
% inter-trial intervals
itis = [0, 2, 4];
iti_num = length(itis);
% iti colours, from black to blue
iti_cols = [zeros(iti_num, 2) linspace(0, 0.8, iti_num)'];


%% discretise time
N = ceil(t / dt);
t = N * dt;
ts = 0:dt:(t-dt);


%% draw momenary evidence, compute suff. states, belief, choices
xs = dt + sqrt(sig2 * dt) * randn(sim_num, N);
Xs = cumsum(xs, 2);
pz1gx = 1 ./ (1 + exp(- 2 * Xs / sig2));
% expected reward (avg.) is just average belief minus cost
er = mean(pz1gx, 1) - c * ts;
% expected trial time is accumulation time + iti
tt = bsxfun(@plus, ts, itis');
% reward rate is fraction of the two
rr = bsxfun(@rdivide, er, tt);


%% plot results
figure('Color', 'white');

% posterior over time
subplot(2, 1, 1);  hold on;
xlim([0 t]);  ylim([0 1]);
pz1gx_median = prctile(pz1gx, 50, 1);
pz1gx_p25 = prctile(pz1gx, 2.5, 1);
pz1gx_p975 = prctile(pz1gx, 97.5, 1);
patch([ts fliplr(ts)], [pz1gx_p25 fliplr(pz1gx_p975 )], ...
      [1 1 1]*0.8, 'EdgeColor', 'none');
plot(ts, pz1gx_median, 'k-', 'LineWidth', 3);
% guides
plot(xlim, [0.5 0.5], 'k--', 'LineWidth', 1);
% labels
ylabel('p(z = 1 | x_{0:t})');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[4/3,1,1],...
        'FontName','Arial','FontSize',12,...
        'TickDir','out','TickLength',[1 1]*0.02,'XTick',0:floor(t));

% expected reward
subplot(2, 1, 2);  hold on;
xlim([0 t]);  ylim([0 1]);
legendstr = {};
for iti_idx = 1:iti_num
    plot(ts, rr(iti_idx, :), '-', 'LineWidth', 3, 'Color', iti_cols(iti_idx, :));
    legendstr = cat(2, legendstr, sprintf('t_i %3.1f', itis(iti_idx)));
end
% guides
plot(xlim, [0.5 0.5], 'k--', 'LineWidth', 1);
% labels and legends
xlabel('time t');
ylabel('expected reward rate');
legend(legendstr, 'Location', 'NorthEast');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[4/3,1,1],...
        'FontName','Arial','FontSize',12,...
        'TickDir','out','TickLength',[1 1]*0.02,'XTick',0:floor(t));
